FROM python:3.12-slim AS base

ENV PIP_NO_CACHE_DIR=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    ANSIBLE_FORCE_COLOR=1 \
    PY_COLORS=1

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        git \
        sshpass \
        build-essential \
        libssl-dev \
        libffi-dev \
        python3-dev \
        pkg-config \
        curl \
        ca-certificates \
    && rm -rf /var/lib/apt/lists/*

ARG DOCKER_CLI_VERSION=27.2.0
RUN set -eux; \
    arch="$(dpkg --print-architecture)"; \
    case "$arch" in \
      amd64) cli_arch="x86_64" ;; \
      arm64) cli_arch="aarch64" ;; \
      *) echo "Unsupported architecture: ${arch}" >&2; exit 1 ;; \
    esac; \
    curl -fsSL "https://download.docker.com/linux/static/stable/${cli_arch}/docker-${DOCKER_CLI_VERSION}.tgz" \
      | tar -xz -C /usr/local/bin --strip-components=1 docker/docker; \
    chmod +x /usr/local/bin/docker

RUN python -m pip install --upgrade pip \
    && pip install \
        ansible-core==2.17.1 \
        ansible-lint==24.6.0 \
        molecule==25.9.0 \
        molecule-plugins[docker]==25.8.12 \
        docker \
        yamllint==1.35.1 \
        pre-commit==3.7.1

RUN ansible-galaxy collection install -p /usr/share/ansible/collections \
        community.general \
        ansible.posix \
        community.docker \
        kubernetes.core \
        community.kubernetes

ENV ANSIBLE_COLLECTIONS_PATH="/workspace/collections:/usr/share/ansible/collections"

WORKDIR /workspace

CMD ["/bin/bash"]
